// Code generated by go-queryset. DO NOT EDIT.
package model

import (
	"errors"
	"fmt"
	"strings"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set AccountQuerySet

// AccountQuerySet is an queryset type for Account
type AccountQuerySet struct {
	db *gorm.DB
}

// NewAccountQuerySet constructs new AccountQuerySet
func NewAccountQuerySet(db *gorm.DB) AccountQuerySet {
	return AccountQuerySet{
		db: db.Model(&Account{}),
	}
}

func (qs AccountQuerySet) w(db *gorm.DB) AccountQuerySet {
	return NewAccountQuerySet(db)
}

func (qs AccountQuerySet) Select(fields ...AccountDBSchemaField) AccountQuerySet {
	names := []string{}
	for _, f := range fields {
		names = append(names, f.String())
	}

	return qs.w(qs.db.Select(strings.Join(names, ",")))
}

// Create is an autogenerated method
// nolint: dupl
func (o *Account) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *Account) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// All is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) All(ret *[]Account) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// CreateTimeEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreateTimeEq(createTime int32) AccountQuerySet {
	return qs.w(qs.db.Where("create_time = ?", createTime))
}

// CreateTimeGt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreateTimeGt(createTime int32) AccountQuerySet {
	return qs.w(qs.db.Where("create_time > ?", createTime))
}

// CreateTimeGte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreateTimeGte(createTime int32) AccountQuerySet {
	return qs.w(qs.db.Where("create_time >= ?", createTime))
}

// CreateTimeIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreateTimeIn(createTime ...int32) AccountQuerySet {
	if len(createTime) == 0 {
		qs.db.AddError(errors.New("must at least pass one createTime in CreateTimeIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("create_time IN (?)", createTime))
}

// CreateTimeLt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreateTimeLt(createTime int32) AccountQuerySet {
	return qs.w(qs.db.Where("create_time < ?", createTime))
}

// CreateTimeLte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreateTimeLte(createTime int32) AccountQuerySet {
	return qs.w(qs.db.Where("create_time <= ?", createTime))
}

// CreateTimeNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreateTimeNe(createTime int32) AccountQuerySet {
	return qs.w(qs.db.Where("create_time != ?", createTime))
}

// CreateTimeNotIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreateTimeNotIn(createTime ...int32) AccountQuerySet {
	if len(createTime) == 0 {
		qs.db.AddError(errors.New("must at least pass one createTime in CreateTimeNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("create_time NOT IN (?)", createTime))
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreatedAtEq(createdAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreatedAtGt(createdAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreatedAtGte(createdAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreatedAtLt(createdAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreatedAtLte(createdAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) CreatedAtNe(createdAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) Delete() error {
	return qs.db.Delete(Account{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(Account{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(Account{})
	return db.RowsAffected, db.Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) DeletedAtEq(deletedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) DeletedAtGt(deletedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) DeletedAtGte(deletedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) DeletedAtIsNotNull() AccountQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) DeletedAtIsNull() AccountQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) DeletedAtLt(deletedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) DeletedAtLte(deletedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) DeletedAtNe(deletedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// GetDB is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) GetDB() *gorm.DB {
	return qs.db
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) GetUpdater() AccountUpdater {
	return NewAccountUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) IDEq(ID uint) AccountQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) IDGt(ID uint) AccountQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) IDGte(ID uint) AccountQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) IDIn(ID ...uint) AccountQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) IDLt(ID uint) AccountQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) IDLte(ID uint) AccountQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) IDNe(ID uint) AccountQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) IDNotIn(ID ...uint) AccountQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) Limit(limit int) AccountQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// MobileEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) MobileEq(mobile string) AccountQuerySet {
	return qs.w(qs.db.Where("mobile = ?", mobile))
}

// MobileGt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) MobileGt(mobile string) AccountQuerySet {
	return qs.w(qs.db.Where("mobile > ?", mobile))
}

// MobileGte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) MobileGte(mobile string) AccountQuerySet {
	return qs.w(qs.db.Where("mobile >= ?", mobile))
}

// MobileIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) MobileIn(mobile ...string) AccountQuerySet {
	if len(mobile) == 0 {
		qs.db.AddError(errors.New("must at least pass one mobile in MobileIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("mobile IN (?)", mobile))
}

// MobileLike is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) MobileLike(mobile string) AccountQuerySet {
	return qs.w(qs.db.Where("mobile LIKE ?", mobile))
}

// MobileLt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) MobileLt(mobile string) AccountQuerySet {
	return qs.w(qs.db.Where("mobile < ?", mobile))
}

// MobileLte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) MobileLte(mobile string) AccountQuerySet {
	return qs.w(qs.db.Where("mobile <= ?", mobile))
}

// MobileNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) MobileNe(mobile string) AccountQuerySet {
	return qs.w(qs.db.Where("mobile != ?", mobile))
}

// MobileNotIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) MobileNotIn(mobile ...string) AccountQuerySet {
	if len(mobile) == 0 {
		qs.db.AddError(errors.New("must at least pass one mobile in MobileNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("mobile NOT IN (?)", mobile))
}

// MobileNotlike is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) MobileNotlike(mobile string) AccountQuerySet {
	return qs.w(qs.db.Where("mobile NOT LIKE ?", mobile))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) Offset(offset int) AccountQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs AccountQuerySet) One(ret *Account) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreateTime is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderAscByCreateTime() AccountQuerySet {
	return qs.w(qs.db.Order("create_time ASC"))
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderAscByCreatedAt() AccountQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderAscByDeletedAt() AccountQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderAscByID() AccountQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByMobile is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderAscByMobile() AccountQuerySet {
	return qs.w(qs.db.Order("mobile ASC"))
}

// OrderAscByPassword is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderAscByPassword() AccountQuerySet {
	return qs.w(qs.db.Order("password ASC"))
}

// OrderAscByStatus is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderAscByStatus() AccountQuerySet {
	return qs.w(qs.db.Order("status ASC"))
}

// OrderAscByUpdateTime is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderAscByUpdateTime() AccountQuerySet {
	return qs.w(qs.db.Order("update_time ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderAscByUpdatedAt() AccountQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderAscByUserId is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderAscByUserId() AccountQuerySet {
	return qs.w(qs.db.Order("user_id ASC"))
}

// OrderAscByUsername is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderAscByUsername() AccountQuerySet {
	return qs.w(qs.db.Order("username ASC"))
}

// OrderDescByCreateTime is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderDescByCreateTime() AccountQuerySet {
	return qs.w(qs.db.Order("create_time DESC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderDescByCreatedAt() AccountQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderDescByDeletedAt() AccountQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderDescByID() AccountQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByMobile is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderDescByMobile() AccountQuerySet {
	return qs.w(qs.db.Order("mobile DESC"))
}

// OrderDescByPassword is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderDescByPassword() AccountQuerySet {
	return qs.w(qs.db.Order("password DESC"))
}

// OrderDescByStatus is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderDescByStatus() AccountQuerySet {
	return qs.w(qs.db.Order("status DESC"))
}

// OrderDescByUpdateTime is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderDescByUpdateTime() AccountQuerySet {
	return qs.w(qs.db.Order("update_time DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderDescByUpdatedAt() AccountQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// OrderDescByUserId is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderDescByUserId() AccountQuerySet {
	return qs.w(qs.db.Order("user_id DESC"))
}

// OrderDescByUsername is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) OrderDescByUsername() AccountQuerySet {
	return qs.w(qs.db.Order("username DESC"))
}

// PasswordEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) PasswordEq(password string) AccountQuerySet {
	return qs.w(qs.db.Where("password = ?", password))
}

// PasswordGt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) PasswordGt(password string) AccountQuerySet {
	return qs.w(qs.db.Where("password > ?", password))
}

// PasswordGte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) PasswordGte(password string) AccountQuerySet {
	return qs.w(qs.db.Where("password >= ?", password))
}

// PasswordIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) PasswordIn(password ...string) AccountQuerySet {
	if len(password) == 0 {
		qs.db.AddError(errors.New("must at least pass one password in PasswordIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("password IN (?)", password))
}

// PasswordLike is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) PasswordLike(password string) AccountQuerySet {
	return qs.w(qs.db.Where("password LIKE ?", password))
}

// PasswordLt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) PasswordLt(password string) AccountQuerySet {
	return qs.w(qs.db.Where("password < ?", password))
}

// PasswordLte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) PasswordLte(password string) AccountQuerySet {
	return qs.w(qs.db.Where("password <= ?", password))
}

// PasswordNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) PasswordNe(password string) AccountQuerySet {
	return qs.w(qs.db.Where("password != ?", password))
}

// PasswordNotIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) PasswordNotIn(password ...string) AccountQuerySet {
	if len(password) == 0 {
		qs.db.AddError(errors.New("must at least pass one password in PasswordNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("password NOT IN (?)", password))
}

// PasswordNotlike is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) PasswordNotlike(password string) AccountQuerySet {
	return qs.w(qs.db.Where("password NOT LIKE ?", password))
}

// StatusEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) StatusEq(status int) AccountQuerySet {
	return qs.w(qs.db.Where("status = ?", status))
}

// StatusGt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) StatusGt(status int) AccountQuerySet {
	return qs.w(qs.db.Where("status > ?", status))
}

// StatusGte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) StatusGte(status int) AccountQuerySet {
	return qs.w(qs.db.Where("status >= ?", status))
}

// StatusIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) StatusIn(status ...int) AccountQuerySet {
	if len(status) == 0 {
		qs.db.AddError(errors.New("must at least pass one status in StatusIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("status IN (?)", status))
}

// StatusLt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) StatusLt(status int) AccountQuerySet {
	return qs.w(qs.db.Where("status < ?", status))
}

// StatusLte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) StatusLte(status int) AccountQuerySet {
	return qs.w(qs.db.Where("status <= ?", status))
}

// StatusNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) StatusNe(status int) AccountQuerySet {
	return qs.w(qs.db.Where("status != ?", status))
}

// StatusNotIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) StatusNotIn(status ...int) AccountQuerySet {
	if len(status) == 0 {
		qs.db.AddError(errors.New("must at least pass one status in StatusNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("status NOT IN (?)", status))
}

// UpdateTimeEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdateTimeEq(updateTime int32) AccountQuerySet {
	return qs.w(qs.db.Where("update_time = ?", updateTime))
}

// UpdateTimeGt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdateTimeGt(updateTime int32) AccountQuerySet {
	return qs.w(qs.db.Where("update_time > ?", updateTime))
}

// UpdateTimeGte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdateTimeGte(updateTime int32) AccountQuerySet {
	return qs.w(qs.db.Where("update_time >= ?", updateTime))
}

// UpdateTimeIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdateTimeIn(updateTime ...int32) AccountQuerySet {
	if len(updateTime) == 0 {
		qs.db.AddError(errors.New("must at least pass one updateTime in UpdateTimeIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("update_time IN (?)", updateTime))
}

// UpdateTimeLt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdateTimeLt(updateTime int32) AccountQuerySet {
	return qs.w(qs.db.Where("update_time < ?", updateTime))
}

// UpdateTimeLte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdateTimeLte(updateTime int32) AccountQuerySet {
	return qs.w(qs.db.Where("update_time <= ?", updateTime))
}

// UpdateTimeNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdateTimeNe(updateTime int32) AccountQuerySet {
	return qs.w(qs.db.Where("update_time != ?", updateTime))
}

// UpdateTimeNotIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdateTimeNotIn(updateTime ...int32) AccountQuerySet {
	if len(updateTime) == 0 {
		qs.db.AddError(errors.New("must at least pass one updateTime in UpdateTimeNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("update_time NOT IN (?)", updateTime))
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdatedAtEq(updatedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdatedAtGt(updatedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdatedAtGte(updatedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdatedAtLt(updatedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdatedAtLte(updatedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UpdatedAtNe(updatedAt time.Time) AccountQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// UserIdEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UserIdEq(userId string) AccountQuerySet {
	return qs.w(qs.db.Where("user_id = ?", userId))
}

// UserIdGt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UserIdGt(userId string) AccountQuerySet {
	return qs.w(qs.db.Where("user_id > ?", userId))
}

// UserIdGte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UserIdGte(userId string) AccountQuerySet {
	return qs.w(qs.db.Where("user_id >= ?", userId))
}

// UserIdIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UserIdIn(userId ...string) AccountQuerySet {
	if len(userId) == 0 {
		qs.db.AddError(errors.New("must at least pass one userId in UserIdIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("user_id IN (?)", userId))
}

// UserIdLike is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UserIdLike(userId string) AccountQuerySet {
	return qs.w(qs.db.Where("user_id LIKE ?", userId))
}

// UserIdLt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UserIdLt(userId string) AccountQuerySet {
	return qs.w(qs.db.Where("user_id < ?", userId))
}

// UserIdLte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UserIdLte(userId string) AccountQuerySet {
	return qs.w(qs.db.Where("user_id <= ?", userId))
}

// UserIdNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UserIdNe(userId string) AccountQuerySet {
	return qs.w(qs.db.Where("user_id != ?", userId))
}

// UserIdNotIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UserIdNotIn(userId ...string) AccountQuerySet {
	if len(userId) == 0 {
		qs.db.AddError(errors.New("must at least pass one userId in UserIdNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("user_id NOT IN (?)", userId))
}

// UserIdNotlike is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UserIdNotlike(userId string) AccountQuerySet {
	return qs.w(qs.db.Where("user_id NOT LIKE ?", userId))
}

// UsernameEq is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UsernameEq(username string) AccountQuerySet {
	return qs.w(qs.db.Where("username = ?", username))
}

// UsernameGt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UsernameGt(username string) AccountQuerySet {
	return qs.w(qs.db.Where("username > ?", username))
}

// UsernameGte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UsernameGte(username string) AccountQuerySet {
	return qs.w(qs.db.Where("username >= ?", username))
}

// UsernameIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UsernameIn(username ...string) AccountQuerySet {
	if len(username) == 0 {
		qs.db.AddError(errors.New("must at least pass one username in UsernameIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("username IN (?)", username))
}

// UsernameLike is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UsernameLike(username string) AccountQuerySet {
	return qs.w(qs.db.Where("username LIKE ?", username))
}

// UsernameLt is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UsernameLt(username string) AccountQuerySet {
	return qs.w(qs.db.Where("username < ?", username))
}

// UsernameLte is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UsernameLte(username string) AccountQuerySet {
	return qs.w(qs.db.Where("username <= ?", username))
}

// UsernameNe is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UsernameNe(username string) AccountQuerySet {
	return qs.w(qs.db.Where("username != ?", username))
}

// UsernameNotIn is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UsernameNotIn(username ...string) AccountQuerySet {
	if len(username) == 0 {
		qs.db.AddError(errors.New("must at least pass one username in UsernameNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("username NOT IN (?)", username))
}

// UsernameNotlike is an autogenerated method
// nolint: dupl
func (qs AccountQuerySet) UsernameNotlike(username string) AccountQuerySet {
	return qs.w(qs.db.Where("username NOT LIKE ?", username))
}

// SetCreateTime is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetCreateTime(createTime int32) AccountUpdater {
	u.fields[string(AccountDBSchema.CreateTime)] = createTime
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetCreatedAt(createdAt time.Time) AccountUpdater {
	u.fields[string(AccountDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetDeletedAt(deletedAt *time.Time) AccountUpdater {
	u.fields[string(AccountDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetID(ID uint) AccountUpdater {
	u.fields[string(AccountDBSchema.ID)] = ID
	return u
}

// SetMobile is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetMobile(mobile string) AccountUpdater {
	u.fields[string(AccountDBSchema.Mobile)] = mobile
	return u
}

// SetPassword is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetPassword(password string) AccountUpdater {
	u.fields[string(AccountDBSchema.Password)] = password
	return u
}

// SetStatus is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetStatus(status int) AccountUpdater {
	u.fields[string(AccountDBSchema.Status)] = status
	return u
}

// SetUpdateTime is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetUpdateTime(updateTime int32) AccountUpdater {
	u.fields[string(AccountDBSchema.UpdateTime)] = updateTime
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetUpdatedAt(updatedAt time.Time) AccountUpdater {
	u.fields[string(AccountDBSchema.UpdatedAt)] = updatedAt
	return u
}

// SetUserId is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetUserId(userId string) AccountUpdater {
	u.fields[string(AccountDBSchema.UserId)] = userId
	return u
}

// SetUsername is an autogenerated method
// nolint: dupl
func (u AccountUpdater) SetUsername(username string) AccountUpdater {
	u.fields[string(AccountDBSchema.Username)] = username
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u AccountUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u AccountUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// ===== END of query set AccountQuerySet

// ===== BEGIN of Account modifiers

// AccountDBSchemaField describes database schema field. It requires for method 'Update'
type AccountDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f AccountDBSchemaField) String() string {
	return string(f)
}

// AccountDBSchema stores db field names of Account
var AccountDBSchema = struct {
	ID         AccountDBSchemaField
	CreatedAt  AccountDBSchemaField
	UpdatedAt  AccountDBSchemaField
	DeletedAt  AccountDBSchemaField
	CreateTime AccountDBSchemaField
	UpdateTime AccountDBSchemaField
	UserId     AccountDBSchemaField
	Username   AccountDBSchemaField
	Password   AccountDBSchemaField
	Mobile     AccountDBSchemaField
	Status     AccountDBSchemaField
}{

	ID:         AccountDBSchemaField("id"),
	CreatedAt:  AccountDBSchemaField("created_at"),
	UpdatedAt:  AccountDBSchemaField("updated_at"),
	DeletedAt:  AccountDBSchemaField("deleted_at"),
	CreateTime: AccountDBSchemaField("create_time"),
	UpdateTime: AccountDBSchemaField("update_time"),
	UserId:     AccountDBSchemaField("user_id"),
	Username:   AccountDBSchemaField("username"),
	Password:   AccountDBSchemaField("password"),
	Mobile:     AccountDBSchemaField("mobile"),
	Status:     AccountDBSchemaField("status"),
}

// Update updates Account fields by primary key
// nolint: dupl
func (o *Account) Update(db *gorm.DB, fields ...AccountDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":          o.ID,
		"created_at":  o.CreatedAt,
		"updated_at":  o.UpdatedAt,
		"deleted_at":  o.DeletedAt,
		"create_time": o.CreateTime,
		"update_time": o.UpdateTime,
		"user_id":     o.UserId,
		"username":    o.Username,
		"password":    o.Password,
		"mobile":      o.Mobile,
		"status":      o.Status,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update Account %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// AccountUpdater is an Account updates manager
type AccountUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewAccountUpdater creates new Account updater
// nolint: dupl
func NewAccountUpdater(db *gorm.DB) AccountUpdater {
	return AccountUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&Account{}),
	}
}

// ===== END of Account modifiers

// ===== END of all query sets
